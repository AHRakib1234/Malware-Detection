import json
import csv
import os
import pandas as pd

api_list_file = '../unique_list.txt'


with open(api_list_file, 'r') as file:
    column_names = file.read().splitlines()

df = pd.DataFrame(columns=['Name'] + column_names)

# Append 600 rows with initial values set to zero
rows = []
for _ in range(400):
    rows.append([0] * (len(column_names) + 1))

df = pd.concat([df, pd.DataFrame(rows, columns=df.columns)], ignore_index=True)


# def api_list_maker():
#     global api_list, api_list_file
#     with open(api_list_file, "r") as file1:
#         for line in file1:
#             api_list.append([line.strip()])
#         print(api_list)

# def return_index(api_name):
#     global api_list
#     for i in range(len(api_list)):
#         if api_name == api_list[i]:
#             print('yes')
#             return i+1

def extract_api_call_features(report, index, name):
    global df
    df.at[index, "Name"] = name
    behavior = report.get('behavior', {})
    for process in behavior.get('processes', []):
        calls = process.get('calls', [])
        for call in calls:
            api = call.get('api', '')
            df.at[index, api] += 1
    return 0


# Directory containing JSON report files
mal_reports_directory = 'path'
ben_reports_directory = 'path'

# Output CSV file
csv_file = 'mal_api_call_all_V2.csv'
ben_csv = 'ben_api_call_all_V2.csv'

# api_list_maker()

count = 0

for filename in os.listdir(ben_reports_directory):
    if filename.endswith('.json'):
        file_name_without_extension = os.path.splitext(filename)[0]  # Extract file name without extension
        file_path = os.path.join(ben_reports_directory, filename)
        try:
            with open(file_path, 'r') as f:
                cuckoo_report = json.load(f)
        except json.JSONDecodeError as e:
            print(f"Error loading {file_path}: {e}")
            count +=1
            continue  # Skip to the next file


        api_calls = extract_api_call_features(cuckoo_report,count,file_name_without_extension)
        count += 1
df.to_csv(ben_csv, index=False)

# for filename in os.listdir(ben_reports_directory):
#     if filename.endswith('.json'):
#         file_name_without_extension = os.path.splitext(filename)[0]  # Extract file name without extension
#         file_path = os.path.join(ben_reports_directory, filename)
#         try:
#             with open(file_path, 'r') as f:
#                 cuckoo_report = json.load(f)
#         except json.JSONDecodeError as e:
#             print(f"Error loading {file_path}: {e}")
#             continue  # Skip to the next file
#
#
#         api_calls = extract_api_call_features(cuckoo_report)
#
#         # Update global API call set
#
#
#         # Prepare row for CSV file
#         row = [file_name_without_extension] + list(api_calls)
#
#         # Append row to CSV file
#         with open(ben_csv, 'a', newline='') as csvfile:
#             writer = csv.writer(csvfile)
#             writer.writerow(row)
#
#         print('done',file_name_without_extension)
#
#
